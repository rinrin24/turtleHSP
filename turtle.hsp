//#include "hspmath.as"
#include "turtle.as"

#module
#deffunc fractal double size, int depth
	if depth <= 0{
		forward(size)                          ;直線
	}else{
		fractal double(size/3), depth-1 : left 60     ;1/3の長さでフラクタル描画、左に60度向く
		fractal double(size/3), depth-1 : left -120   ;1/3の長さでフラクタル描画、右に120度向く
		fractal double(size/3), depth-1 : left 60     ;1/3の長さでフラクタル描画、左に60度向く
		fractal double(size/3), depth-1             	  ;1/3の長さでフラクタル描画
	}
	return
#global
/*
	forward 100
	left 120
	pencolor $ff0000
	forward 200
	left 120
	pencolor $00ff00
	forward 200
	left 120
	forward 100
*/
/*
penup
goto -250, 0
right 180
pendown
pencolor red
repeat 36
	forward 500
	left 170
loop
penup
goto 250, 0
pendown
//stop
repeat 36 + 1
	goto cos(deg2rad(10 * cnt)) * 250, sin(deg2rad(10 * cnt)) * 250
loop
*/
;fractal 300, 4
;penup
/*
goto 0, 200

goto -100, 200
clear
left 180
pendown
repeat 5
	fractal 400, 3
	left 360/5
loop
/**/
/*
;	stop
pencolor red@
stamp
goto 100, 0
stamp
home
goto -100, 0
stamp
goto -200, 0
pensize 5
goto 0, -200
logmes "" + heading()
/**/
goto 0, -200
clear
pensize 4
seth 0
points = 360
repeat points / 4
	forward 3
	right 360 / points
	;logmes heading()
	;logmes posX()
loop